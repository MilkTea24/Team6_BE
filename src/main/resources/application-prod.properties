#MySQL ?? ${DATABASE_URL}?serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=${DATABASE_URL}?serverTimezone=${TZ}&allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=${MYSQL_ROOT_PASSWORD}
spring.jpa.database=mysql

#Schema ??
spring.sql.init.mode=always
#spring.sql.init.schema-locations=classpath:db/schema.sql
spring.jpa.defer-datasource-initialization=true



#spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=none
Spring.jpa.properties.hibernate.default_batch_fetch_size=10
#spring.jpa.properties.hibernate.format_sql=true

spring.servlet.multipart.file-size-threshold=5MB
#spring.servlet.multipart.location= /data/upload_temp
spring.servlet.multipart.max-file-size= 10MB
spring.servlet.multipart.max-request-size= 100MB

spring.redis.host=redis
spring.redis.port=6379

server.servlet.context-path=/api

#spring.devtools.remote.proxy.host= krmp-proxy.9rum.cc
#spring.devtools.remote.proxy.port= 3128

logging.level.root = INFO
logging.level.com.amazonaws = INFO

#S3 설정
#access key
cloud.aws.credentials.accessKey=${ACCESS_KEY}

#secret key
cloud.aws.credentials.secretKey=${SECRET_KEY}

#?? ??
cloud.aws.s3.bucket=${BUCKET_NAME}

#??
cloud.aws.region.static=${REGION}

#cloud formation ??? ???? ?? ??.
cloud.aws.stack.auto=false

#oauth 설정
spring.security.oauth2.client.registration.google.client-id=${CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile,email